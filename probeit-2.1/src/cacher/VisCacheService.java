
package cacher;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "VisCacheService", targetNamespace = "http://cacher/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface VisCacheService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVisualizations", targetNamespace = "http://cacher/", className = "cacher.GetVisualizations")
    @ResponseWrapper(localName = "getVisualizationsResponse", targetNamespace = "http://cacher/", className = "cacher.GetVisualizationsResponse")
    public List<String> getVisualizations(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getViewers", targetNamespace = "http://cacher/", className = "cacher.GetViewers")
    @ResponseWrapper(localName = "getViewersResponse", targetNamespace = "http://cacher/", className = "cacher.GetViewersResponse")
    public List<String> getViewers(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThumbnail", targetNamespace = "http://cacher/", className = "cacher.GetThumbnail")
    @ResponseWrapper(localName = "getThumbnailResponse", targetNamespace = "http://cacher/", className = "cacher.GetThumbnailResponse")
    public String getThumbnail(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThumbnailCachedNodesetList", targetNamespace = "http://cacher/", className = "cacher.GetThumbnailCachedNodesetList")
    @ResponseWrapper(localName = "getThumbnailCachedNodesetListResponse", targetNamespace = "http://cacher/", className = "cacher.GetThumbnailCachedNodesetListResponse")
    public List<String> getThumbnailCachedNodesetList(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

}
